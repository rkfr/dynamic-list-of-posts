{"version":3,"sources":["components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","helpers.js","components/PostList.js","api.js","App.js","index.js"],"names":["User","_ref","name","email","address","react_default","a","createElement","Box","Typography","variant","component","href","concat","city","street","suite","Comment","body","ListItem","components_User","CommentList","state","showComments","showCommentsHandler","_this","setState","prevState","comments","this","props","className","Button","color","onClick","size","List","map","comment","components_Comment","Object","assign","key","id","React","Component","useStyles","makeStyles","theme","root","padding","spacing","Post","title","user","classes","Paper","CommentList_CommentList","filterPostsByString","posts","str","filter","post","toLowerCase","includes","PostList","filterKeyWord","getFilterKeyword","target","value","_this$props","postsData","getPostData","isDataLoading","filteredData","postsToShow","length","Fragment","TextField","margin","label","onChange","components_Post","display","justifyContent","disabled","getPosts","fetch","then","res","json","getUsers","getComments","App","_callee","users","regenerator_default","wrap","_context","prev","next","sent","mergeData","stop","_ref2","objectSpread","find","userId","postId","_this$state","align","gutterBottom","PostList_PostList","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.1784e80b.chunk.js","sourcesContent":["import React from 'react';\nimport { Typography, Box } from '@material-ui/core';\n\nconst User = ({ name, email, address }) => (\n  <Box>\n    <Typography\n      variant=\"h6\"\n      component=\"h4\"\n    >\n      {name}\n    </Typography>\n    <address>\n      <Box>\n        <a href={`mailto: ${email}`}>{email}</a>\n      </Box>\n      {\n        address\n        && (\n        <Box>\n          <span>{address.city}</span>\n          <span>{address.street}</span>\n          <span>{address.suite}</span>\n        </Box>\n        )\n      }\n    </address>\n  </Box>\n);\n\nexport default User;\n","import React from 'react';\nimport { ListItem, Box } from '@material-ui/core';\nimport User from './User';\n\nconst Comment = ({ name, email, body }) => (\n  <ListItem>\n    <User\n      name={name}\n      email={email}\n    />\n    <Box>{body}</Box>\n  </ListItem>\n);\n\nexport default Comment;\n","import React from 'react';\nimport { Button, List, Box } from '@material-ui/core';\nimport Comment from './Comment';\n\nexport default class CommentList extends React.Component {\n  state = {\n    showComments: false,\n  };\n\n  showCommentsHandler = () => {\n    this.setState(prevState => ({ showComments: !prevState.showComments }));\n  };\n\n  render() {\n    const { comments } = this.props;\n    const { showComments } = this.state;\n\n    return (\n      <Box className=\"comments-list\">\n        <Box>\n          <Button\n            variant=\"outlined\"\n            color=\"default\"\n            onClick={this.showCommentsHandler}\n            size=\"small\"\n          >\n            {showComments ? 'Hide comments' : 'Show comments'}\n          </Button>\n        </Box>\n        {\n          showComments\n          && (\n          <List>\n            {comments.map(comment => <Comment key={comment.id} {...comment} />)}\n          </List>\n          )\n        }\n\n      </Box>\n    );\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Typography, ListItem } from '@material-ui/core';\nimport User from './User';\nimport CommentList from './CommentList';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n  },\n}));\n\nconst Post = ({\n  title, body, user, comments,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem>\n      <Paper className={classes.root}>\n        <Typography\n          component=\"h2\"\n          variant=\"h5\"\n        >\n          {title}\n        </Typography>\n        <Typography\n          component=\"p\"\n        >\n          {body}\n        </Typography>\n        <User {...user} />\n        <CommentList comments={comments} />\n      </Paper>\n\n    </ListItem>\n  );\n};\n\nexport default Post;\n","const filterPostsByString = (posts, str) => (\n  posts.filter(post => (post.title.toLowerCase().includes(str.toLowerCase())\n    || post.body.toLowerCase().includes(str.toLowerCase())))\n);\n\nexport default filterPostsByString;\n","import React from 'react';\nimport {\n  List, Button, TextField, Box,\n} from '@material-ui/core';\nimport Post from './Post';\nimport filterPostsByString from '../helpers';\n\nexport default class PostList extends React.Component {\n  state = {\n    filterKeyWord: '',\n  };\n\n  getFilterKeyword = ({ target: { value: filterKeyWord } }) => this.setState({ filterKeyWord });\n\n  render() {\n    const {\n      postsData, getPostData, isDataLoading,\n    } = this.props;\n\n    const { filterKeyWord } = this.state;\n    const filteredData = filterPostsByString(postsData, filterKeyWord);\n    const postsToShow = filteredData.length ? filteredData : postsData;\n\n    return (\n      <Box>\n        {\n              !postsData.length\n                ? (\n                  <Box\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                  >\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"large\"\n                      disabled={isDataLoading}\n                      onClick={getPostData}\n                    >\n                      {!isDataLoading ? 'Load' : 'Loading...'}\n                    </Button>\n                  </Box>\n                )\n                : (\n                  <>\n                    <Box>\n                      <form>\n                        <TextField\n                          margin=\"normal\"\n                          label=\"Filter posts...\"\n                          value={filterKeyWord}\n                          onChange={this.getFilterKeyword}\n                        />\n                      </form>\n                    </Box>\n                    <List>\n                      {postsToShow.map(post => <Post key={post.id} {...post} />)}\n                    </List>\n                  </>\n                )\n            }\n      </Box>\n    );\n  }\n}\n","export const getPosts = () => fetch('https://jsonplaceholder.typicode.com/posts')\n  .then(res => res.json());\n\nexport const getUsers = () => fetch('https://jsonplaceholder.typicode.com/users')\n  .then(res => res.json());\n\nexport const getComments = () => fetch('https://jsonplaceholder.typicode.com/comments')\n  .then(res => res.json());\n","import React from 'react';\nimport { Typography, Box } from '@material-ui/core';\nimport PostList from './components/PostList';\nimport { getPosts, getUsers, getComments } from './api';\nimport './App.css';\n\nexport default class App extends React.Component {\n  state = {\n    postsData: [],\n    isDataLoading: false,\n  };\n\n  getPostData = async () => {\n    this.setState(prevState => ({ isDataLoading: !prevState.isDataLoading }));\n\n    const posts = await getPosts();\n    const users = await getUsers();\n    const comments = await getComments();\n\n    this.setState({ postsData: this.mergeData({ posts, users, comments }) });\n  }\n\n  mergeData = ({ posts, users, comments }) => posts.map(post => ({\n    ...post,\n    user: users.find(user => user.id === post.userId),\n    comments: comments.filter(comment => comment.postId === post.id),\n  }))\n\n  render() {\n    const { postsData, isDataLoading } = this.state;\n\n    return (\n      <Box className=\"app\">\n        <Typography\n          variant=\"h3\"\n          align=\"center\"\n          gutterBottom\n          component=\"h1\"\n        >\n            Dynamic lists of Posts\n        </Typography>\n        <Box className=\"container\">\n          <PostList\n            postsData={postsData}\n            getPostData={this.getPostData}\n            isDataLoading={isDataLoading}\n          />\n        </Box>\n      </Box>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'typeface-roboto';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}