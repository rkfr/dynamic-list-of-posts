{"version":3,"sources":["components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","helpers.js","components/PostList.js","api.js","App.js","index.js"],"names":["User","props","name","email","address","react_default","a","createElement","className","href","concat","city","street","suite","Comment","_ref","comment","body","components_User","CommentList","state","showComments","showCommentsHandler","_this","setState","prevState","comments","this","type","onClick","map","components_Comment","key","id","React","Component","Post","postData","title","_postData$user","user","CommentList_CommentList","filterPostsByString","posts","str","filter","post","toLowerCase","includes","PostList","filterKeyWord","getFilterKeyword","target","value","_this$props","postsData","getPostData","isDataLoading","filteredData","postsToShow","length","Fragment","htmlFor","placeholder","onChange","components_Post","disabled","getPosts","fetch","then","res","json","getUsers","getComments","App","_callee","users","regenerator_default","wrap","_context","prev","next","sent","mergeData","stop","_ref2","Object","objectSpread","find","userId","postId","_this$state","PostList_PostList","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.7444541a.chunk.js","sourcesContent":["import React from 'react';\n\nconst User = (props) => {\n  const { name, email, address } = props;\n\n  return (\n    <div className=\"user\">\n      <h3 className=\"user__name\">{name}</h3>\n      <address className=\"user__adress\">\n        <div>\n          <a href={`mailto: ${email}`}>{email}</a>\n        </div>\n        {\n          address\n          && (\n          <div>\n            <span className=\"address-item\">{address.city}</span>\n            <span className=\"address-item\">{address.street}</span>\n            <span className=\"address-item\">{address.suite}</span>\n          </div>\n          )\n        }\n      </address>\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport User from './User';\n\nconst Comment = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"comment\">\n      <User\n        name={name}\n        email={email}\n      />\n      <div>{body}</div>\n    </div>\n  );\n};\n\nexport default Comment;\n","import React from 'react';\nimport Comment from './Comment';\n\nexport default class CommentList extends React.Component {\n  state = {\n    showComments: false,\n  };\n\n  showCommentsHandler = () => {\n    this.setState(prevState => ({ showComments: !prevState.showComments }));\n  };\n\n  render() {\n    const { comments } = this.props;\n    const { showComments } = this.state;\n\n    return (\n      <div className=\"comments-list\">\n        <div>\n          <button\n            type=\"button\"\n            onClick={this.showCommentsHandler}\n          >\n            {showComments ? 'Hide comments' : 'Show comments'}\n          </button>\n        </div>\n        {\n          showComments\n          && (\n          <ul>\n            {comments.map(comment => <Comment key={comment.id} comment={comment} />)}\n          </ul>\n          )\n        }\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport User from './User';\nimport CommentList from './CommentList';\n\nconst Post = ({ postData }) => {\n  const {\n    title, body, user: { name, email, address }, comments,\n  } = postData;\n\n  return (\n    <li className=\"post\">\n      <h2 className=\"post__title\">{title}</h2>\n      <p className=\"post__body\">{body}</p>\n      <User\n        name={name}\n        email={email}\n        address={address}\n      />\n      <CommentList comments={comments} />\n    </li>\n  );\n};\n\nexport default Post;\n","const filterPostsByString = (posts, str) => (\n  posts.filter(post => (post.title.toLowerCase().includes(str.toLowerCase())\n    || post.body.toLowerCase().includes(str.toLowerCase())))\n);\n\nexport default filterPostsByString;\n","import React from 'react';\nimport Post from './Post';\nimport filterPostsByString from '../helpers';\n\nexport default class PostList extends React.Component {\n  state = {\n    filterKeyWord: '',\n  };\n\n  getFilterKeyword = ({ target: { value: filterKeyWord } }) => this.setState({ filterKeyWord });\n\n  render() {\n    const {\n      postsData, getPostData, isDataLoading,\n    } = this.props;\n\n    const { filterKeyWord } = this.state;\n    const filteredData = filterPostsByString(postsData, filterKeyWord);\n    const postsToShow = filteredData.length ? filteredData : postsData;\n\n    return (\n      <div className=\"post-list\">\n        {\n              !postsData.length\n                ? (\n                  <div>\n                    <button\n                      type=\"button\"\n                      className=\"load-button\"\n                      disabled={isDataLoading}\n                      onClick={getPostData}\n                    >\n                      {!isDataLoading ? 'Load' : 'Loading...'}\n                    </button>\n                  </div>\n                )\n                : (\n                  <>\n                    <div className=\"filter\">\n                      <form>\n                        <label htmlFor=\"filter-input\">\n                          <input\n                            type=\"text\"\n                            id=\"filter-input\"\n                            placeholder=\"Filter posts...\"\n                            onChange={this.getFilterKeyword}\n                            value={filterKeyWord}\n                          />\n                        </label>\n                      </form>\n                    </div>\n                    <ul>\n                      {postsToShow.map(post => (\n                        <Post key={post.id} postData={post} />\n                      ))}\n                    </ul>\n                  </>\n                )\n            }\n      </div>\n    );\n  }\n}\n","export const getPosts = () => fetch('https://jsonplaceholder.typicode.com/posts')\n  .then(res => res.json());\n\nexport const getUsers = () => fetch('https://jsonplaceholder.typicode.com/users')\n  .then(res => res.json());\n\nexport const getComments = () => fetch('https://jsonplaceholder.typicode.com/comments')\n  .then(res => res.json());\n","import React from 'react';\nimport './App.css';\nimport PostList from './components/PostList';\nimport { getPosts, getUsers, getComments } from './api';\n\nexport default class App extends React.Component {\n  state = {\n    postsData: [],\n    isDataLoading: false,\n  };\n\n  getPostData = async () => {\n    this.setState(prevState => ({ isDataLoading: !prevState.isDataLoading }));\n\n    const posts = await getPosts();\n    const users = await getUsers();\n    const comments = await getComments();\n\n    this.setState({ postsData: this.mergeData({ posts, users, comments }) });\n  }\n\n  mergeData = ({ posts, users, comments }) => posts.map(post => ({\n    ...post,\n    user: users.find(user => user.id === post.userId),\n    comments: comments.filter(comment => comment.postId === post.id),\n  }))\n\n  render() {\n    const { postsData, isDataLoading } = this.state;\n\n    return (\n      <div className=\"app\">\n        <div className=\"container\">\n          <h1>Dynamic lists of Posts</h1>\n          <PostList\n            postsData={postsData}\n            getPostData={this.getPostData}\n            isDataLoading={isDataLoading}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}