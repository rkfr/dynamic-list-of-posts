{"version":3,"sources":["components/User.js","components/Post.js","components/PostList.js","api.js","App.js","index.js"],"names":["User","_ref","userData","showFullData","name","email","_userData$address","address","city","street","suite","react_default","a","createElement","className","href","concat","Post","postData","title","body","user","components_User","PostList","postsData","loadPostData","isDataLoading","length","map","post","components_Post","key","id","type","disabled","onClick","getPosts","fetch","then","res","json","getUsers","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","asyncToGenerator","regenerator_default","mark","_callee","posts","users","wrap","_context","prev","next","setState","prevState","sent","getPostsWithUsers","stop","state","objectSpread","find","userId","_this$state","components_PostList","React","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.aae862a8.chunk.js","sourcesContent":["import React from 'react';\n\nconst User = ({ userData, showFullData }) => {\n  const { name, email, address: { city, street, suite } } = userData;\n\n  return (\n    <div className=\"user\">\n      <h3 className=\"user__name\">{name}</h3>\n      <address className=\"user__adress\">\n        <div>\n          <a href={`mailto: ${email}`}>{email}</a>\n        </div>\n        {\n          showFullData\n          && (\n          <div>\n            <span className=\"address-item\">{city}</span>\n            <span className=\"address-item\">{street}</span>\n            <span className=\"address-item\">{suite}</span>\n          </div>\n          )\n        }\n      </address>\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport User from './User';\n\nconst Post = ({ postData }) => {\n  const { title, body, user } = postData;\n\n  return (\n    <li className=\"post\">\n      <h2 className=\"post__title\">{title}</h2>\n      <p className=\"post__body\">{body}</p>\n      <User\n        userData={user}\n        showFullData\n      />\n    </li>\n  );\n};\n\n\nexport default Post;\n","import React from 'react';\nimport Post from './Post';\n\nconst PostList = ({ postsData, loadPostData, isDataLoading }) => {\n  const showPosts = () => (\n    <ul>\n      {postsData.map(post => (\n        <Post key={post.id} postData={post} />\n      ))}\n    </ul>\n  );\n\n  return (\n    <div className=\"post-list\">\n      {\n        !postsData.length\n          ? (\n            <div>\n              <button\n                type=\"button\"\n                className=\"load-button\"\n                disabled={isDataLoading}\n                onClick={loadPostData}\n              >\n                {!isDataLoading ? 'Load' : 'Loading...'}\n              </button>\n            </div>\n          )\n          : showPosts()\n      }\n    </div>\n  );\n};\n\nexport default PostList;\n","export const getPosts = () => fetch('https://jsonplaceholder.typicode.com/posts')\n  .then(res => res.json());\n\nexport const getUsers = () => fetch('https://jsonplaceholder.typicode.com/users')\n  .then(res => res.json());\n\nexport const getComments = () => fetch('https://jsonplaceholder.typicode.com/comments')\n  .then(res => res.json());\n","import React from 'react';\nimport './App.css';\nimport PostList from './components/PostList';\nimport { getPosts, getUsers } from './api';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      postsData: [],\n      isDataLoading: false \n    };\n  }\n\n  getPostsWithUsers(posts, users) {\n    return posts.map(post => ({\n      ...post,\n      user: users.find(user => user.id === post.userId),\n    }));\n  }\n\n  loadPostData = async () => {\n    this.setState(prevState => ({ isDataLoading: !prevState.isDataLoading }));\n\n    const posts = await getPosts();\n    const users = await getUsers();\n\n    this.setState({ postsData: this.getPostsWithUsers(posts, users) });\n  }\n\n  render() {\n    const { postsData, isDataLoading } = this.state;\n    \n    return (\n      <div className=\"app\">\n        <h1>Dynamic lists of Posts</h1>\n        <PostList \n          postsData={postsData}\n          loadPostData={this.loadPostData}\n          isDataLoading={isDataLoading}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}