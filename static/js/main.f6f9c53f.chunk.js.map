{"version":3,"sources":["components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","helpers.js","components/PostList.js","api.js","App.js","index.js"],"names":["User","props","name","email","address","react_default","a","createElement","Typography","variant","component","href","concat","city","street","suite","Comment","_ref","comment","body","ListItem","components_User","CommentList","state","showComments","showCommentsHandler","_this","setState","prevState","comments","this","className","Button","color","onClick","size","List","map","components_Comment","key","id","React","Component","Post","postData","title","_postData$user","user","Paper","CommentList_CommentList","filterPostsByString","posts","str","filter","post","toLowerCase","includes","PostList","filterKeyWord","getFilterKeyword","target","value","_this$props","postsData","getPostData","isDataLoading","filteredData","postsToShow","length","Fragment","TextField","margin","label","onChange","components_Post","disabled","getPosts","fetch","then","res","json","getUsers","getComments","App","_callee","users","regenerator_default","wrap","_context","prev","next","sent","setTimeout","mergeData","stop","_ref2","Object","objectSpread","find","userId","postId","_this$state","align","gutterBottom","PostList_PostList","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.f6f9c53f.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nconst User = (props) => {\n  const { name, email, address } = props;\n\n  return (\n    <div>\n      <Typography\n        variant=\"h6\"\n        component=\"h4\"\n      >\n        {name}\n      </Typography>\n      <address>\n        <div>\n          <a href={`mailto: ${email}`}>{email}</a>\n        </div>\n        {\n          address\n          && (\n          <div>\n            <span>{address.city}</span>\n            <span>{address.street}</span>\n            <span>{address.suite}</span>\n          </div>\n          )\n        }\n      </address>\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from './User';\n\nconst Comment = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <ListItem>\n      <User\n        name={name}\n        email={email}\n      />\n      <div>{body}</div>\n    </ListItem>\n  );\n};\n\nexport default Comment;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Comment from './Comment';\n\nexport default class CommentList extends React.Component {\n  state = {\n    showComments: false,\n  };\n\n  showCommentsHandler = () => {\n    this.setState(prevState => ({ showComments: !prevState.showComments }));\n  };\n\n  render() {\n    const { comments } = this.props;\n    const { showComments } = this.state;\n\n    return (\n      <div className=\"comments-list\">\n        <div>\n          <Button\n            variant=\"outlined\"\n            color=\"default\"\n            onClick={this.showCommentsHandler}\n            size=\"small\"\n          >\n            {showComments ? 'Hide comments' : 'Show comments'}\n          </Button>\n        </div>\n        {\n          showComments\n          && (\n          <List>\n            {comments.map(comment => <Comment key={comment.id} comment={comment} />)}\n          </List>\n          )\n        }\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Paper, Typography, ListItem } from '@material-ui/core';\nimport User from './User';\nimport CommentList from './CommentList';\n\nconst Post = ({ postData }) => {\n  const {\n    title, body, user: { name, email, address }, comments,\n  } = postData;\n\n  return (\n    <ListItem>\n      <Paper>\n        <Typography\n          component=\"h2\"\n        >\n          {title}\n        </Typography>\n        <Typography\n          component=\"p\"\n        >\n          {body}\n        </Typography>\n        <User\n          name={name}\n          email={email}\n          address={address}\n        />\n        <CommentList comments={comments} />\n      </Paper>\n\n    </ListItem>\n  );\n};\n\nexport default Post;\n","const filterPostsByString = (posts, str) => (\n  posts.filter(post => (post.title.toLowerCase().includes(str.toLowerCase())\n    || post.body.toLowerCase().includes(str.toLowerCase())))\n);\n\nexport default filterPostsByString;\n","import React from 'react';\nimport { List, Button, TextField } from '@material-ui/core';\nimport Post from './Post';\nimport filterPostsByString from '../helpers';\n\nexport default class PostList extends React.Component {\n  state = {\n    filterKeyWord: '',\n  };\n\n  getFilterKeyword = ({ target: { value: filterKeyWord } }) => this.setState({ filterKeyWord });\n\n  render() {\n    const {\n      postsData, getPostData, isDataLoading,\n    } = this.props;\n\n    const { filterKeyWord } = this.state;\n    const filteredData = filterPostsByString(postsData, filterKeyWord);\n    const postsToShow = filteredData.length ? filteredData : postsData;\n\n    return (\n      <div>\n        {\n              !postsData.length\n                ? (\n                  <div>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      size=\"large\"\n                      disabled={isDataLoading}\n                      onClick={getPostData}\n                    >\n                      {!isDataLoading ? 'Load' : 'Loading...'}\n                    </Button>\n                  </div>\n                )\n                : (\n                  <>\n                    <div>\n                      <form>\n                        <TextField\n                          margin=\"normal\"\n                          label=\"Filter posts...\"\n                          value={filterKeyWord}\n                          onChange={this.getFilterKeyword}\n                        />\n                      </form>\n                    </div>\n                    <List>\n                      {postsToShow.map(post => (\n                        <Post key={post.id} postData={post} />\n                      ))}\n                    </List>\n                  </>\n                )\n            }\n      </div>\n    );\n  }\n}\n","export const getPosts = () => fetch('https://jsonplaceholder.typicode.com/posts')\n  .then(res => res.json());\n\nexport const getUsers = () => fetch('https://jsonplaceholder.typicode.com/users')\n  .then(res => res.json());\n\nexport const getComments = () => fetch('https://jsonplaceholder.typicode.com/comments')\n  .then(res => res.json());\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport PostList from './components/PostList';\nimport { getPosts, getUsers, getComments } from './api';\nimport './App.css';\n\nexport default class App extends React.Component {\n  state = {\n    postsData: [],\n    isDataLoading: false,\n  };\n\n  getPostData = async () => {\n    this.setState(prevState => ({ isDataLoading: !prevState.isDataLoading }));\n\n    const posts = await getPosts();\n    const users = await getUsers();\n    const comments = await getComments();\n\n    setTimeout(() => {\n      this.setState({ postsData: this.mergeData({ posts, users, comments }) });\n    }, 500);\n  }\n\n  mergeData = ({ posts, users, comments }) => posts.map(post => ({\n    ...post,\n    user: users.find(user => user.id === post.userId),\n    comments: comments.filter(comment => comment.postId === post.id),\n  }))\n\n  render() {\n    const { postsData, isDataLoading } = this.state;\n\n    return (\n      <div className=\"app\">\n        <Typography\n          variant=\"h3\"\n          align=\"center\"\n          gutterBottom\n          component=\"h1\"\n        >\n            Dynamic lists of Posts\n        </Typography>\n        <div className=\"container\">\n          <PostList\n            postsData={postsData}\n            getPostData={this.getPostData}\n            isDataLoading={isDataLoading}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'typeface-roboto';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}